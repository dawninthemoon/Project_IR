<AIGraph Name="LugerChanAI" DefaultState="Entry">

    <Include Path="Assets/Data/AILibrary/Package/CommonRandMovePackage.xml"/>
    <Include Path="Assets/Data/AILibrary/Package/CommonDeadPackage.xml"/>
    <Include Path="Assets/Data/AILibrary/Package/CommonHitPackage.xml"/>
    <Include Path="Assets/Data/AILibrary/Package/CommonChasePackage.xml"/>
    <Include Path="Assets/Data/AILibrary/Package/CommonLockOnRotateAttackPackage.xml"/>
    <Include Path="Assets/Data/AILibrary/Package/CommonIdlePackage.xml"/>
    <Include Path="Assets/Data/AILibrary/Package/CommonGuardBrokenPackage.xml"/>
    <Include Path="Assets/Data/AILibrary/Package/CommonAlertMovePackage.xml"/>

    <!-- 플레이어를 인지하는 거리 -->
    <GlobalVariable Name="gv_SightRange" Value="7.5"/>
    <!-- 플레이어를 공격할 수 있는 거리-->
    <GlobalVariable Name="gv_AttackRange" Value="7.5"/>
    <!-- 아타리가 행동을 전환하는데 걸리는 시간-->
    <GlobalVariable Name="gv_atariChanTransitionTime" Value="0.4"/>
    
    <Entry Package="CommonRandMovePackage">
        <Branch Condition="Dead" Execute="Dead"/>
        <Branch Condition="Hit" Execute="Hit"/>
        <Branch Condition="GuardBreakFail || GuardBroken" Execute="GuardBroken"/>
        <Branch Condition="TargetExists && (gv_SightRange >= TargetDistance)" Execute="Chase"/>
        
    </Entry>
    
    <Chase Package="CommonChasePackage">
        <Branch Condition="Dead" Execute="Dead"/>
        <Branch Condition="Hit" Execute="Hit"/> 
        <Branch Condition="GuardBreakFail || GuardBroken" Execute="GuardBroken"/>
        <Branch Weight="RandBoolean^True" Condition="TargetExists && 
                           (gv_AttackRange >= TargetDistance) && 
                           (GraphExecutedTime > gv_atariChanTransitionTime)" Execute="Attack"/>

        <Branch Weight="RandBoolean^False" Condition="TargetExists && 
                           (gv_AttackRange >= TargetDistance) && 
                           (GraphExecutedTime > gv_atariChanTransitionTime)" Execute="RandomAlertMove"/>
    </Chase>

    <RandomMove Package="CommonRandMovePackage">
        <Branch Condition="Dead" Execute="Dead"/>
        <Branch Condition="Hit" Execute="Hit"/> 
        <Branch Condition="GuardBreakFail || GuardBroken" Execute="GuardBroken"/>
        <Branch Weight="RandBoolean^True" Condition="(GraphExecutedTime > gv_atariChanTransitionTime)" Execute="Chase"/>
        <Branch Weight="RandBoolean^False" Condition="(GraphExecutedTime > gv_atariChanTransitionTime)" Execute="RandomMove"/>
    </RandomMove>

    <RandomAlertMove Package="CommonAlertMovePackage">
        <Branch Condition="Dead" Execute="Dead"/>
        <Branch Condition="Hit" Execute="Hit"/> 
        <Branch Condition="GuardBreakFail || GuardBroken" Execute="GuardBroken"/>
        <Branch Condition="GraphExecutedTime > 0.5" Execute="Chase"/>
    </RandomAlertMove>

    <Attack Package="CommonLockOnRotateAttackPackage">
        <Branch Condition="Dead" Execute="Dead"/>
        <Branch Condition="Hit" Execute="Hit"/> 
        <Branch Condition="GuardBreakFail || GuardBroken" Execute="GuardBroken"/>
        <Branch Condition="CurrentPackageEnd" Execute="RandomMove"/>
    </Attack>

    <Hit Package="CommonHitPackage">
        <Branch Condition="Dead" Execute="Dead"/>
        <Branch Condition="Hit" Execute="Hit"/>
        <Branch Condition="GuardBreakFail || GuardBroken" Execute="GuardBroken"/>
        <Branch Condition="CurrentPackageEnd" Execute="Entry"/>
    </Hit>

    <GuardBroken Package="CommonGuardBrokenPackage">
        <Branch Condition="Dead" Execute="Dead"/>
        <Branch Condition="Hit" Execute="Hit"/>
        <Branch Condition="GuardBreakFail || GuardBroken" Execute="GuardBroken"/>
        <Branch Condition="CurrentPackageEnd" Execute="Entry"/>
    </GuardBroken>
    
    <Dead Package="CommonDeadPackage">
    </Dead>

</AIGraph>